To Do:
- Add maken
- Day veranderen:
	- Loop klasse maken in Schedule
		- Bevat een linkedlist van nodes:
			- Bevat order
			- Bevat lijst van (next, prev) <- voor elke keer dat de node is ingepland
				-> length(lijst(next,prev)) == freq(order) 
					(ervanuitgaande dat we een order altijd geheel inplannen, which we do)
		- Tijd Over
		- Ruimte Over in vuilniswagen.
	- Tijd over
	- AddNodeToLoop(Node n, Loop lp, Location la) Methode maken

Add(Node a)
	Node closest = null;
	loop_of_closest = null
	double closestdistance = double.MaxValue

	foreach(mogelijke_dag in mogelijke_dagen)
		if (mogelijke_dag.Time_Left < a.Time) continue;
		else
			foreach (loop in day)
				if (loop.Time_Left < a.Time || loop.Space_Left < a.Space) continue
				else 
					foreach (Node in Loop)
						if (GetDistance(Node, a) < closestdistance)
							closestdistance = GetDistance(Node, a)
							closest = Node
							loop_of_closest = loop

	return (GetDelta(loop, a, closest), current_state))

if (Zoekalgoritme.Approves(Add(Node a))) => AddNodeToLoop(loop, a, closest)



Format Inlevermodel

Iedere regel bevat vier entries gescheiden door een punt-komma
1.	Vrachtautonummer (1 of 2)
2.	Dagnummer (maandag =1, dinsdag =2, …, vrijdag =5)
3.	Hoeveelste adres dat het voertuig op die dag aandoet (begin met 1, 2, …)
4.	Id. van het adres (uit orderbestand.txt); de stort heeft nummer 0. (OrderId)
Voorbeeld: Op maandag begint voertuig 1 met adres 10, daarna 20, dan afstorten, en vervolgens door naar 30. 
Op het eind van de dag gaat de auto weer naar de stort; dit moet je ook aangeven.
1; 1; 1; 10
1; 1; 2; 20
1; 1; 3; 0
1; 1; 4; 30

SWEETSPOT PARAMETERS:
	nonPlannedOrders = orders.OrderBy(o => o.Cluster).ThenBy(o => o.Frequency).ThenBy(o => o.Score).ToList();
	opCount = 20
	int index = rnd.Next(0, s.nonPlannedOrders.Count / 5);
	AddByCluster BEST




http://178.85.229.78:8067/team/157557372232042770
	